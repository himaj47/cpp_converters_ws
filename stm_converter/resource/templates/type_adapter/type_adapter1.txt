{{includes}}

template<>
struct rclcpp::TypeAdapter<{{namespace}}::{{struct_name}}, {{interface_name}}::msg::{{msg}}>
{
  using is_specialized = std::true_type;
  using custom_type = {{namespace}}::{{struct_name}};
  using ros_message_type = {{interface_name}}::msg::{{msg}};

  static
  void
  convert_to_ros_message(
    const custom_type & source,
    ros_message_type & destination)
  {
    {{primitives}}
    {{to_ros_msg}}
  }

  static
  void
  convert_to_custom(
    const ros_message_type & source,
    custom_type & destination)
  {
    {{primitives}}
    {{to_custom}}
  }
};